import com.capgemini.javaengineering.gradeladder.BuildGitBook
import com.capgemini.javaengineering.gradeladder.GenerateBook

plugins {
    id "com.moowork.node" version "0.8"
}

apply plugin: 'com.moowork.node'
apply plugin: 'java'

sourceSets {
    examples
}

node {
    // Version of node to use.
    version = '7.2.1'

    // Version of npm to use.
    npmVersion = '3.10.9'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'http://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = false
    workDir = file("${project.buildDir}/nodejs")
}


task generateBook(type: GenerateBook){
    dependsOn gradle.includedBuild('gradeladder-generator').task(':build')
    inputFile = project.file('input/expectations.csv')
    outputDirectory = project.file('src')
}

['pdf', 'epub', 'mobi'].each { bookType ->
    tasks.create("build$bookType", BuildGitBook) { task ->
        task.dependsOn tasks.generateBook
        task.inputDirectory = tasks.generateBook.outputDirectory
        task.type = bookType
    }
}

task buildAll {
    dependsOn tasks.withType(BuildGitBook)
    doLast {
        println 'Built PDF, Mobi and EPub!'
    }
}

task serveBook(type:Exec, dependsOn: ['generateBook', 'npmInstall']) {
    executable = 'gitbook'
    args = ['serve', './', "./output/http", '--verbose']
}
